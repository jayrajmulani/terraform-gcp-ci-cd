name: Terraform Provisioning Workflow

on:
  push
  # :
  #   branches:
  #     - main
  #     - dev
  #     - release*

env:
  # WORKSPACE: ${{github.ref_name}}
  WORKSPACE: 13-ansible-nginx
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

jobs:
  terraform-provisioning:
    name: Create resources using terraform
    runs-on: self-hosted

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup fresh SSH keys
        run: |
          ssh-keygen -t rsa -b 4096 -C "mresham" -f ~/.ssh/id_rsa -N '' <<< y

      - name: Initialize
        run: terraform init
        working-directory: ./terraform-files

      - name: Create Workspace
        run: terraform workspace select -or-create=true $WORKSPACE
        working-directory: ./terraform-files

      - name: Create plan
        run: terraform plan -input=false
        working-directory: ./terraform-files

      - name: Create resources
        run: terraform apply -auto-approve -input=false
        working-directory: ./terraform-files

      - name: Output External IP
        id: external_ip
        run: |
          terraform refresh
          echo "::set-output name=external_ip::$(terraform output -raw external_ip)"
        working-directory: ./terraform-files

    outputs:
      external_ip: ${{ steps.external_ip.outputs.external_ip }}

  ansible-configuration:
    name: Configure server using ansible
    runs-on: self-hosted
    needs: terraform-provisioning

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v3

      # FIXME: Uncomment before merging #23
      - name: Trigger Ansible playbook
        run: |
          external_ip=${{ needs.terraform-provisioning.outputs.external_ip }}
          env ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i "${external_ip}," --private-key=~/.ssh/id_rsa ansible/deployment.yaml -e ansible_user=mresham

      # Comment below step to disable resource destroy when #23 is able to successfully deploy the app
      - name: Destroy resources
        run: |
          terraform init
          terraform workspace select $WORKSPACE
          terraform destroy -auto-approve -input=false
        working-directory: ./terraform-files
