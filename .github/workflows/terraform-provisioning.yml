name: Terraform Provisioning Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - dev
      - release*

env:
  WORKSPACE: dev
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

jobs:
  terraform-provisioning:
    name: Create resources using terraform
    runs-on: self-hosted

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup fresh SSH keys
        run: |
          ssh-keygen -t rsa -b 4096 -C "mresham" -f ~/.ssh/id_rsa -N '' <<< y

      - name: Initialize
        run: terraform init
        working-directory: ./terraform-files

      - name: Create Workspace
        run: terraform workspace select -or-create=true $WORKSPACE
        working-directory: ./terraform-files

      - name: Create plan
        run: terraform plan -input=false
        working-directory: ./terraform-files

      - name: Create resources
        # Comment below line while testing workflow
        # if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        working-directory: ./terraform-files

      - name: Output External IP
        id: external_ip
        run: |
          echo "::set-output name=external_ip::$(terraform output -raw external_ip)"
        working-directory: ./terraform-files

    outputs:
      external_ip: ${{ steps.external_ip.outputs.external_ip }}

  ansible-configuration:
    name: Configure server using ansible
    runs-on: self-hosted
    needs: terraform-provisioning

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v3

      - name: Trigger Ansible playbook
        run: |
          external_ip=${{ needs.terraform-provisioning.outputs.external_ip }}
          echo ansible-playbook -i "${external_ip}," --private-key=~/.ssh/id_rsa -e 'ansible_user=mresham' deployment.yaml 
        working-directory: ./ansible

      # Uncomment below step while testing workflow
      # - name: Destroy resources
      #   run: terraform destroy -auto-approve -input=false
      #   working-directory: ./terraform-files

      # - name: Trigger Ansible playbook
      #   # Comment below line while testing workflow
      #   # if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
      #   run: |
      #     external_ip=$(terraform output -raw external_ip)
      #     echo $external_ip
      #     ansible-playbook -i "${external_ip}," ../ansible/deployment.yaml --private-key $KEY_FILE
      #   working-directory: ./terraform-files

      # Uncomment below step while testing workflow
      # - name: Destroy resources
      #   run: terraform destroy -auto-approve -input=false
      #   working-directory: ./terraform-files
